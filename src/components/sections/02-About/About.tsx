"use client";

import React, { useEffect, useRef } from "react";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";

gsap.registerPlugin(ScrollTrigger);

const About: React.FC = () => {
  const textRef = useRef<HTMLParagraphElement | null>(null);
  const titleRef = useRef<HTMLHeadingElement | null>(null);
  const containerRef = useRef<HTMLDivElement | null>(null);
  const badge1Ref = useRef<HTMLDivElement | null>(null);
  const badge2Ref = useRef<HTMLDivElement | null>(null);
  const badge3Ref = useRef<HTMLDivElement | null>(null);
  const sectionRef = useRef<HTMLDivElement | null>(null);

  useEffect(() => {
    if (!textRef.current || !containerRef.current || !titleRef.current || !sectionRef.current) return;

    const ctx = gsap.context(() => {
      // –ú–ì–ù–û–í–ï–ù–ù–û —Å–∫—Ä—ã–≤–∞–µ–º About –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ –∞–Ω–∏–º–∞—Ü–∏–π
      gsap.set(sectionRef.current, {
        opacity: 0
      });
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–ª–∞—à–µ–∫
      const badges = [badge1Ref.current, badge2Ref.current, badge3Ref.current];
      badges.forEach(badge => {
        if (badge) {
          gsap.set(badge, { 
            opacity: 0, 
            y: 20,
            transformOrigin: "center center"
          });
        }
      });
      
      // –°–æ–∑–¥–∞–µ–º flip text —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
      const titleText = titleRef.current!.innerText;
      const titleChars = titleText.split("");
      titleRef.current!.innerHTML = titleChars
        .map((char) => 
          char === " " ? "&nbsp;" : 
          `<span class="flip-char inline-block" style="transform: rotateX(-90deg); opacity: 0;">${char}</span>`
        )
        .join("");

      const flipChars = gsap.utils.toArray<HTMLSpanElement>(".flip-char");

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º About —Å–µ–∫—Ü–∏—é –∫–æ–≥–¥–∞ –æ–Ω–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è
      gsap.to(sectionRef.current, {
        opacity: 1,
        scrollTrigger: {
          trigger: "body",
          start: "+=150vh", // Show slightly earlier than flip animation
          end: "+=200vh",
          scrub: 1,
        },
      });
      
      // Flip text –∞–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–∞—è –∫ —Å–∫—Ä–æ–ª–ª—É  
      gsap.to(flipChars, {
        rotateX: 0,
        opacity: 1,
        stagger: 0.05,
        ease: "back.out(1.7)",
        scrollTrigger: {
          trigger: "body",
          start: "+=200vh", // Start after Hero disappears
          end: "+=300vh", // Give less time for flip text
          scrub: 1,
        },
      });

      // –†–∞–∑–±–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞
      const textWords = textRef.current!.innerText.split(" ");
      textRef.current!.innerHTML = textWords
        .map((w) => `<span class="word opacity-0">${w}</span>`)
        .join(" ");

      const words = gsap.utils.toArray<HTMLSpanElement>(".word");

      // –ê–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–∞—è –∫ —Å–∫—Ä–æ–ª–ª—É - –ù–ê–ß–ò–ù–ê–ï–ú –†–ê–ù–¨–®–ï
      gsap.to(words, {
        opacity: 1,
        stagger: 0.02,
        ease: "power2.out",
        scrollTrigger: {
          trigger: "body",
          start: "+=300vh", // Start earlier - right after flip text
          end: "+=500vh", // Give more time for text animation
          scrub: 1,
        },
      });

      // –ê–Ω–∏–º–∞—Ü–∏—è –ø–ª–∞—à–µ–∫ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–∞—è –∫ —Å–∫—Ä–æ–ª–ª—É - –ê–ë–°–û–õ–Æ–¢–ù–´–ï –∑–Ω–∞—á–µ–Ω–∏—è
      gsap.to(badges, {
        opacity: 1,
        y: 0,
        ease: "power2.out",
        stagger: 0.05,
        scrollTrigger: {
          trigger: "body",
          start: "550vh", // –ê–ë–°–û–õ–Æ–¢–ù–û–ï - –Ω–∞—á–∏–Ω–∞–µ–º –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–≥–æ –ø–µ—á–∞—Ç–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
          end: "750vh", // –ê–ë–°–û–õ–Æ–¢–ù–û–ï - –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –î–û –Ω–∞—á–∞–ª–∞ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è (800vh)
          scrub: 1,
        },
      });
      
      // –°–ö–†–û–õ–õ-–ê–ù–ò–ú–ê–¶–ò–Ø –ò–°–ß–ï–ó–ù–û–í–ï–ù–ò–Ø About –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –ø—Ä–µ–º–∏—É–º —Ä–∞–∑–º—ã—Ç–∏–µ–º
      const aboutContent = [titleRef.current, textRef.current, badge1Ref.current, badge2Ref.current, badge3Ref.current].filter(Boolean);
      
      gsap.fromTo(aboutContent, 
        // FROM —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è)
        {
          y: 0,
          opacity: 1, 
          scale: 1,
          filter: "blur(0px)"
        },
        // TO —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ —Å –ø—Ä–µ–º–∏—É–º —Ä–∞–∑–º—ã—Ç–∏–µ–º)
        {
          y: -120, // –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ Hero –∫–æ–Ω—Ç–µ–Ω—Ç—É
          opacity: 0,
          scale: 0.9, // –õ–µ–≥–∫–æ–µ —É–º–µ–Ω—å—à–µ–Ω–∏–µ –ø—Ä–∏ —É–µ–∑–¥–µ
          filter: "blur(15px)", // –£—Å–∏–ª–µ–Ω–Ω—ã–π blur —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –ø—Ä–µ–º–∏—É–º –ø–µ—Ä–µ—Ö–æ–¥–∞
          ease: "power2.in", // –£—Å–∫–æ—Ä–µ–Ω–∏–µ –ø—Ä–∏ —É–µ–∑–¥–µ –≤–≤–µ—Ä—Ö
          stagger: 0.05, // –ü–æ–æ—á–µ—Ä–µ–¥–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
          overwrite: "auto",
          scrollTrigger: {
            trigger: "body",
            start: "700vh", // –ù–∞—á–∏–Ω–∞–µ–º –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –ø–æ–∑–∂–µ - –ø–æ—Å–ª–µ –≤—Å–µ—Ö –∞–Ω–∏–º–∞—Ü–∏–π –ø–æ—è–≤–ª–µ–Ω–∏—è
            end: "1140vh", // –ê–ë–°–û–õ–Æ–¢–ù–û–ï - –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –∫–æ–≥–¥–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è Services  
            scrub: 2.0, // –ë–æ–ª–µ–µ –º–µ–¥–ª–µ–Ω–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –ø—Ä–µ–º–∏—É–º —ç—Ñ—Ñ–µ–∫—Ç–∞
            markers: false,
            invalidateOnRefresh: true,
            // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏ –æ–±—Ä–∞—Ç–Ω–æ–º —Å–∫—Ä–æ–ª–ª–µ
            onUpdate: (self) => {
              if (self.progress === 0) {
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –∫ –Ω–∞—á–∞–ª—É
                gsap.set(aboutContent, {
                  y: 0,
                  opacity: 1,
                  scale: 1,
                  filter: "blur(0px)"
                });
              }
            }
          }
        }
      );
      
    }, containerRef);

    return () => ctx.revert();
  }, []);

  return (
    <div 
      ref={sectionRef}
      className="min-h-screen w-full bg-transparent flex items-center justify-center relative z-10"
    >
      <div
        className="w-full max-w-[1440px] mx-auto py-8 sm:py-12 md:py-16 container-type-inline"
        style={{
          paddingInline: "var(--container-padding)",
        }}
      >
        {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∏ (—Å–∏–Ω–∏–π) */}
        <div
          ref={containerRef}
          className="text-left w-full border-2 border-dashed border-blue-500 relative container-type-inline min-h-[400px] flex items-center"
        >
          {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç */}
          <div 
            className="mx-auto border-2 border-dashed border-purple-500 text-center z-10 relative w-full"
            style={{ 
              maxWidth: 'var(--about-container-width)'
            }}
          >
            <h2
              ref={titleRef}
              className="font-black text-white leading-none tracking-tight font-inter overflow-hidden"
              style={{
                fontSize: "var(--about-h2-size)",
                marginBottom: "var(--about-spacing-title)",
              }}
            >
              –û –∫–ª–∏–Ω–∏–∫–µ
            </h2>

            <p
              ref={textRef}
              className="text-white font-semibold font-inter"
              style={{
                fontSize: "var(--about-text-size)",
                lineHeight: "var(--about-text-line-height)",
                marginBottom: "var(--about-spacing-text)",
              }}
            >
              –í –¶–µ–Ω—Ç—Ä–µ –ó–¥–æ—Ä–æ–≤—å—è –ñ–∏–≤–æ—Ç–Ω—ã—Ö –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä
              –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã—Ö —É—Å–ª—É–≥: üíé —Ç–µ—Ä–∞–ø–∏—è, –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è –∏ –≤–∏–∑—É–∞–ª—å–Ω–∞—è
              –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, ‚ú¶ —ç–Ω–¥–æ—Å–∫–æ–ø–∏—è, —Ö–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–∏–µ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏, üòä –ø–ª–∞–Ω–æ–≤—ã–µ
              –æ–ø–µ—Ä–∞—Ü–∏–∏, –∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–≤ —Ç–æ–º —á–∏—Å–ª–µ –ø–µ—Ä–µ—Å–∞–¥–∫–∞ –∫–æ–∂–∏), ‚≠ê
              —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è, –æ—Ñ—Ç–∞–ª—å–º–æ–ª–æ–≥–∏—è, –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—è, ‚ú® –ø—Ä–∏—ë–º —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏—Ö
              –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ –≤—ã–∑–æ–≤ –Ω–∞ –¥–æ–º. –û—Ç–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω–æ–π —Ç–µ—Ä–∞–ø–∏–∏
              –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç ‚ú¶ –ø–µ—Ä–µ–ª–∏–≤–∞–Ω–∏–µ –∫—Ä–æ–≤–∏ –∏ —Ä–µ–∞–±–∏–ª–∏—Ç–∞—Ü–∏—é –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ
              –æ—Å—Ç–µ–æ—Å–∏–Ω—Ç–µ–∑–∞ –∏ –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞ –ø–æ–∑–≤–æ–Ω–æ—á–Ω–æ–º —Å—Ç–æ–ª–±–µ. ‚ù§Ô∏è –£–Ω–∏–∫–∞–ª—å–Ω–∞—è
              –º–µ—Ç–æ–¥–∏–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –ª–µ—á–∏—Ç—å –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –¥—ë—Å–µ–Ω. üî• –í–ø–µ—Ä–≤—ã–µ
              –≤ –°–æ—á–∏ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ª–∞–ø–∞—Ä–æ—Å–∫–æ–ø–∏—á–µ—Å–∫–∞—è —Å—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—è —Å–æ–±–∞–∫ –∏ –∫–æ—à–µ–∫.
            </p>

            {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–ª–∞—à–µ–∫ Magic UI —Å—Ç–∏–ª—è */}
            <div 
              className="mx-auto border-2 border-dashed border-green-500 flex items-start justify-center"
              style={{
                height: 'var(--magic-badge-container-height)',
                gap: 'var(--magic-badge-gap)',
                paddingTop: 'var(--spacing-sm)'
              }}
            >
              {/* –ü–ª–∞—à–∫–∞ 1 */}
              <div 
                ref={badge1Ref}
                className="flex items-center justify-center px-4 py-1.5 border border-white"
                style={{
                  width: 'var(--magic-badge-width)',
                  height: 'var(--magic-badge-height)',
                  fontSize: 'var(--magic-badge-text-size)',
                  borderRadius: '20px',
                }}
              >
                <span style={{ fontSize: 'var(--magic-badge-text-size)' }}>‚è∞</span>
                <hr className="mx-2 h-4 w-px shrink-0 bg-neutral-500" />
                <span className="text-white font-medium" style={{ fontSize: 'var(--magic-badge-text-size)' }}>
                  24/7
                </span>
              </div>
              
              {/* –ü–ª–∞—à–∫–∞ 2 */}
              <div 
                ref={badge2Ref}
                className="flex items-center justify-center px-4 py-1.5 border border-white"
                style={{
                  width: 'var(--magic-badge-width)',
                  height: 'var(--magic-badge-height)',
                  fontSize: 'var(--magic-badge-text-size)',
                  borderRadius: '20px',
                }}
              >
                <span style={{ fontSize: 'var(--magic-badge-text-size)' }}>üè•</span>
                <hr className="mx-2 h-4 w-px shrink-0 bg-neutral-500" />
                <span className="text-white font-medium" style={{ fontSize: 'var(--magic-badge-text-size)' }}>
                  3 —Ñ–∏–ª–∏–∞–ª–∞
                </span>
              </div>
              
              {/* –ü–ª–∞—à–∫–∞ 3 */}
              <div 
                ref={badge3Ref}
                className="flex items-center justify-center px-4 py-1.5 border border-white"
                style={{
                  width: 'var(--magic-badge-width)',
                  height: 'var(--magic-badge-height)',
                  fontSize: 'var(--magic-badge-text-size)',
                  borderRadius: '20px',
                }}
              >
                <span style={{ fontSize: 'var(--magic-badge-text-size)' }}>‚ù§Ô∏è</span>
                <hr className="mx-2 h-4 w-px shrink-0 bg-neutral-500" />
                <span className="text-white font-medium" style={{ fontSize: 'var(--magic-badge-text-size)' }}>
                  –° –∑–∞–±–æ—Ç–æ–π
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default About;